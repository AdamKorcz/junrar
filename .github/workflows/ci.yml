name: CI

on:
  pull_request:
  push:
    branches-ignore:
      - 'dependabot/**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    name: Test on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          java-package: 'jdk'
          distribution: 'temurin'
      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-jdk-${{ matrix.os }}
          path: build/test-results/
      - name: Jacoco
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jacocoTestReport
      - uses: codecov/codecov-action@v3
        if: matrix.os == 'ubuntu-latest'

  release:
    name: semantic release
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          java-package: 'jdk'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Install dependencies
        run: npm ci --omit=dev --ignore-scripts
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.MAVENCENTRAL_USER }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.MAVENCENTRAL_PASSWORD }}
        run: npx semantic-release
